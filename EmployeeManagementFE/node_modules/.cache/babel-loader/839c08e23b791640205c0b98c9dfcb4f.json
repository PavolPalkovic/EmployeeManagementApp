{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-31269332\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"edit\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"Save\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"backdrop\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.closeEdit && $options.closeEdit(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeEdit && $options.closeEdit(...args))\n  }, \"X\"), _createCommentVNode(\" <h4>FirstName: <input type=\\\"text\\\" v-model=\\\"employeeData.firstName\\\"> </h4>\\r\\n            <h4>LastName: <input type=\\\"text\\\" v-model=\\\"employeeData.lastName\\\"> </h4>\\r\\n            <h4>Position:\\r\\n            <select v-model=\\\"employeeData.positionName\\\" >\\r\\n                <option v-for=\\\"position in positionData\\\" :key=\\\"position.id\\\">{{ position.name }}</option>\\r\\n            </select>\\r\\n            </h4>\\r\\n            <h4>First Name: {{ firstName }}</h4>\\r\\n            <h4>Last Name: {{ lastName }}</h4>\\r\\n            <h4>Position: {{ positionName }}</h4> \"), _hoisted_2])]);\n}","map":{"version":3,"mappings":";;;;;AAEaA,OAAK,EAAC;;;gEAYPC,oBAAqB,QAArB,EAAqB,IAArB,EAAQ,MAAR,EAAY;AAAA;AAAZ;;;uBAbRC,oBAeM,KAfN,EAeM;AAfDF,SAAK,EAAC,UAeL;AAfiBG,WAAK,wDAAOC,iDAAP,EAAgB,QAAhB;AAetB,GAfN,GACIH,oBAaM,KAbN,cAaM,CAZFA,oBAAqC,QAArC,EAAqC;AAA5BE,WAAK,yCAAEC,iDAAF;AAAuB,GAArC,EAA2B,GAA3B,CAYE,EAXFC,slBAWE,EADFC,UACE,CAbN,EADJ","names":["class","_createElementVNode","_createElementBlock","onClick","$options","_createCommentVNode","_hoisted_2"],"sourceRoot":"","sources":["D:\\Other\\Programing\\Work\\EmployeeManagement\\vue-employee-management\\src\\components\\CurrentView\\CurrentEdit.vue"],"sourcesContent":["<template>\r\n    <div class=\"backdrop\" @click.self=\"closeEdit\">\r\n        <div class=\"edit\">\r\n            <button @click=\"closeEdit\">X</button>\r\n            <!-- <h4>FirstName: <input type=\"text\" v-model=\"employeeData.firstName\"> </h4>\r\n            <h4>LastName: <input type=\"text\" v-model=\"employeeData.lastName\"> </h4>\r\n            <h4>Position:\r\n            <select v-model=\"employeeData.positionName\" >\r\n                <option v-for=\"position in positionData\" :key=\"position.id\">{{ position.name }}</option>\r\n            </select>\r\n            </h4>\r\n            <h4>First Name: {{ firstName }}</h4>\r\n            <h4>Last Name: {{ lastName }}</h4>\r\n            <h4>Position: {{ positionName }}</h4> -->\r\n            <button>Save</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: [ 'id', 'firstName', 'lastName', 'positionName' ],\r\n    data() {\r\n        return {\r\n            // employeeData: {\r\n            //     firstName: props.firstName,\r\n            //     lastName: props.lastName,\r\n            //     positionName: props.positionName\r\n            // },\r\n            positionData: []\r\n        }\r\n    },\r\n    methods: {\r\n        // Custom event. Parent component listens to event named \"closeEdit\".\r\n        // $emit('nameOfEvent')\r\n        closeEdit() {\r\n            this.$emit('closeEdit');\r\n        },\r\n        editEmployee() {\r\n            axios.patch('http://localhost:1028/api/employees/{id}', this.employeeData)\r\n                .then(response => console.log(response))\r\n                .catch(error => console.log(error))\r\n        },\r\n        getPositionData() {\r\n            fetch('http://localhost:1028/api/positions')\r\n                .then(response => response.json())\r\n                .then(data => {this.positionData = data})\r\n        },\r\n        reloadPage() {\r\n            window.location.reload();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .edit {\r\n        width: 400px;\r\n        padding: 20px;\r\n        margin: 100px auto;\r\n        background: white;\r\n        border-radius: 10px;\r\n    }\r\n    .backdrop {\r\n        top: 0;\r\n        position: fixed;\r\n        background: rgba(0,0,0,0.5);\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}