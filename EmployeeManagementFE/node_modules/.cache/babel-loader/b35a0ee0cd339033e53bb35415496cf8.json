{"ast":null,"code":"import { toDate, isValidDate, getWeek } from './util';\nimport defaultLocale from './locale/en';\nvar REGEX_FORMAT = /\\[([^\\]]+)]|YYYY|YY?|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|m{1,2}|s{1,2}|Z{1,2}|S{1,3}|w{1,2}|x|X|a|A/g;\n\nfunction pad(val) {\n  var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var output = \"\".concat(Math.abs(val));\n  var sign = val < 0 ? '-' : '';\n\n  while (output.length < len) {\n    output = \"0\".concat(output);\n  }\n\n  return sign + output;\n}\n\nfunction getOffset(date) {\n  return Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n\nfunction formatTimezone(offset) {\n  var delimeter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  return sign + pad(hours, 2) + delimeter + pad(minutes, 2);\n}\n\nvar meridiem = function meridiem(h, _, isLowercase) {\n  var word = h < 12 ? 'AM' : 'PM';\n  return isLowercase ? word.toLocaleLowerCase() : word;\n};\n\nvar formatFlags = {\n  Y: function Y(date) {\n    var y = date.getFullYear();\n    return y <= 9999 ? \"\".concat(y) : \"+\".concat(y);\n  },\n  // Year: 00, 01, ..., 99\n  YY: function YY(date) {\n    return pad(date.getFullYear(), 4).substr(2);\n  },\n  // Year: 1900, 1901, ..., 2099\n  YYYY: function YYYY(date) {\n    return pad(date.getFullYear(), 4);\n  },\n  // Month: 1, 2, ..., 12\n  M: function M(date) {\n    return date.getMonth() + 1;\n  },\n  // Month: 01, 02, ..., 12\n  MM: function MM(date) {\n    return pad(date.getMonth() + 1, 2);\n  },\n  MMM: function MMM(date, locale) {\n    return locale.monthsShort[date.getMonth()];\n  },\n  MMMM: function MMMM(date, locale) {\n    return locale.months[date.getMonth()];\n  },\n  // Day of month: 1, 2, ..., 31\n  D: function D(date) {\n    return date.getDate();\n  },\n  // Day of month: 01, 02, ..., 31\n  DD: function DD(date) {\n    return pad(date.getDate(), 2);\n  },\n  // Hour: 0, 1, ... 23\n  H: function H(date) {\n    return date.getHours();\n  },\n  // Hour: 00, 01, ..., 23\n  HH: function HH(date) {\n    return pad(date.getHours(), 2);\n  },\n  // Hour: 1, 2, ..., 12\n  h: function h(date) {\n    var hours = date.getHours();\n\n    if (hours === 0) {\n      return 12;\n    }\n\n    if (hours > 12) {\n      return hours % 12;\n    }\n\n    return hours;\n  },\n  // Hour: 01, 02, ..., 12\n  hh: function hh() {\n    var hours = formatFlags.h.apply(formatFlags, arguments);\n    return pad(hours, 2);\n  },\n  // Minute: 0, 1, ..., 59\n  m: function m(date) {\n    return date.getMinutes();\n  },\n  // Minute: 00, 01, ..., 59\n  mm: function mm(date) {\n    return pad(date.getMinutes(), 2);\n  },\n  // Second: 0, 1, ..., 59\n  s: function s(date) {\n    return date.getSeconds();\n  },\n  // Second: 00, 01, ..., 59\n  ss: function ss(date) {\n    return pad(date.getSeconds(), 2);\n  },\n  // 1/10 of second: 0, 1, ..., 9\n  S: function S(date) {\n    return Math.floor(date.getMilliseconds() / 100);\n  },\n  // 1/100 of second: 00, 01, ..., 99\n  SS: function SS(date) {\n    return pad(Math.floor(date.getMilliseconds() / 10), 2);\n  },\n  // Millisecond: 000, 001, ..., 999\n  SSS: function SSS(date) {\n    return pad(date.getMilliseconds(), 3);\n  },\n  // Day of week: 0, 1, ..., 6\n  d: function d(date) {\n    return date.getDay();\n  },\n  // Day of week: 'Su', 'Mo', ..., 'Sa'\n  dd: function dd(date, locale) {\n    return locale.weekdaysMin[date.getDay()];\n  },\n  // Day of week: 'Sun', 'Mon',..., 'Sat'\n  ddd: function ddd(date, locale) {\n    return locale.weekdaysShort[date.getDay()];\n  },\n  // Day of week: 'Sunday', 'Monday', ...,'Saturday'\n  dddd: function dddd(date, locale) {\n    return locale.weekdays[date.getDay()];\n  },\n  // AM, PM\n  A: function A(date, locale) {\n    var meridiemFunc = locale.meridiem || meridiem;\n    return meridiemFunc(date.getHours(), date.getMinutes(), false);\n  },\n  // am, pm\n  a: function a(date, locale) {\n    var meridiemFunc = locale.meridiem || meridiem;\n    return meridiemFunc(date.getHours(), date.getMinutes(), true);\n  },\n  // Timezone: -01:00, +00:00, ... +12:00\n  Z: function Z(date) {\n    return formatTimezone(getOffset(date), ':');\n  },\n  // Timezone: -0100, +0000, ... +1200\n  ZZ: function ZZ(date) {\n    return formatTimezone(getOffset(date));\n  },\n  // Seconds timestamp: 512969520\n  X: function X(date) {\n    return Math.floor(date.getTime() / 1000);\n  },\n  // Milliseconds timestamp: 512969520900\n  x: function x(date) {\n    return date.getTime();\n  },\n  w: function w(date, locale) {\n    return getWeek(date, {\n      firstDayOfWeek: locale.firstDayOfWeek,\n      firstWeekContainsDate: locale.firstWeekContainsDate\n    });\n  },\n  ww: function ww(date, locale) {\n    return pad(formatFlags.w(date, locale), 2);\n  }\n};\nexport function format(val, str) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var formatStr = str ? String(str) : 'YYYY-MM-DDTHH:mm:ss.SSSZ';\n  var date = toDate(val);\n\n  if (!isValidDate(date)) {\n    return 'Invalid Date';\n  }\n\n  var locale = options.locale || defaultLocale;\n  return formatStr.replace(REGEX_FORMAT, function (match, p1) {\n    if (p1) {\n      return p1;\n    }\n\n    if (typeof formatFlags[match] === 'function') {\n      return \"\".concat(formatFlags[match](date, locale));\n    }\n\n    return match;\n  });\n}","map":{"version":3,"sources":["D:/Other/Programing/Work/EmployeeManagement/vue-employee-management/node_modules/date-format-parse/es/format.js"],"names":["toDate","isValidDate","getWeek","defaultLocale","REGEX_FORMAT","pad","val","len","arguments","length","undefined","output","concat","Math","abs","sign","getOffset","date","round","getTimezoneOffset","formatTimezone","offset","delimeter","absOffset","hours","floor","minutes","meridiem","h","_","isLowercase","word","toLocaleLowerCase","formatFlags","Y","y","getFullYear","YY","substr","YYYY","M","getMonth","MM","MMM","locale","monthsShort","MMMM","months","D","getDate","DD","H","getHours","HH","hh","apply","m","getMinutes","mm","s","getSeconds","ss","S","getMilliseconds","SS","SSS","d","getDay","dd","weekdaysMin","ddd","weekdaysShort","dddd","weekdays","A","meridiemFunc","a","Z","ZZ","X","getTime","x","w","firstDayOfWeek","firstWeekContainsDate","ww","format","str","options","formatStr","String","replace","match","p1"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,OAA9B,QAA6C,QAA7C;AACA,OAAOC,aAAP,MAA0B,aAA1B;AACA,IAAIC,YAAY,GAAG,qGAAnB;;AAEA,SAASC,GAAT,CAAaC,GAAb,EAAkB;AAChB,MAAIC,GAAG,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAA9E;AACA,MAAIG,MAAM,GAAG,GAAGC,MAAH,CAAUC,IAAI,CAACC,GAAL,CAASR,GAAT,CAAV,CAAb;AACA,MAAIS,IAAI,GAAGT,GAAG,GAAG,CAAN,GAAU,GAAV,GAAgB,EAA3B;;AAEA,SAAOK,MAAM,CAACF,MAAP,GAAgBF,GAAvB,EAA4B;AAC1BI,IAAAA,MAAM,GAAG,IAAIC,MAAJ,CAAWD,MAAX,CAAT;AACD;;AAED,SAAOI,IAAI,GAAGJ,MAAd;AACD;;AAED,SAASK,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,SAAOJ,IAAI,CAACK,KAAL,CAAWD,IAAI,CAACE,iBAAL,KAA2B,EAAtC,IAA4C,EAAnD;AACD;;AAED,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,SAAS,GAAGd,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAApF;AACA,MAAIO,IAAI,GAAGM,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,GAA9B;AACA,MAAIE,SAAS,GAAGV,IAAI,CAACC,GAAL,CAASO,MAAT,CAAhB;AACA,MAAIG,KAAK,GAAGX,IAAI,CAACY,KAAL,CAAWF,SAAS,GAAG,EAAvB,CAAZ;AACA,MAAIG,OAAO,GAAGH,SAAS,GAAG,EAA1B;AACA,SAAOR,IAAI,GAAGV,GAAG,CAACmB,KAAD,EAAQ,CAAR,CAAV,GAAuBF,SAAvB,GAAmCjB,GAAG,CAACqB,OAAD,EAAU,CAAV,CAA7C;AACD;;AAED,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,WAAxB,EAAqC;AAClD,MAAIC,IAAI,GAAGH,CAAC,GAAG,EAAJ,GAAS,IAAT,GAAgB,IAA3B;AACA,SAAOE,WAAW,GAAGC,IAAI,CAACC,iBAAL,EAAH,GAA8BD,IAAhD;AACD,CAHD;;AAKA,IAAIE,WAAW,GAAG;AAChBC,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAWjB,IAAX,EAAiB;AAClB,QAAIkB,CAAC,GAAGlB,IAAI,CAACmB,WAAL,EAAR;AACA,WAAOD,CAAC,IAAI,IAAL,GAAY,GAAGvB,MAAH,CAAUuB,CAAV,CAAZ,GAA2B,IAAIvB,MAAJ,CAAWuB,CAAX,CAAlC;AACD,GAJe;AAKhB;AACAE,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAYpB,IAAZ,EAAkB;AACpB,WAAOZ,GAAG,CAACY,IAAI,CAACmB,WAAL,EAAD,EAAqB,CAArB,CAAH,CAA2BE,MAA3B,CAAkC,CAAlC,CAAP;AACD,GARe;AAShB;AACAC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAActB,IAAd,EAAoB;AACxB,WAAOZ,GAAG,CAACY,IAAI,CAACmB,WAAL,EAAD,EAAqB,CAArB,CAAV;AACD,GAZe;AAahB;AACAI,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAWvB,IAAX,EAAiB;AAClB,WAAOA,IAAI,CAACwB,QAAL,KAAkB,CAAzB;AACD,GAhBe;AAiBhB;AACAC,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAYzB,IAAZ,EAAkB;AACpB,WAAOZ,GAAG,CAACY,IAAI,CAACwB,QAAL,KAAkB,CAAnB,EAAsB,CAAtB,CAAV;AACD,GApBe;AAqBhBE,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAa1B,IAAb,EAAmB2B,MAAnB,EAA2B;AAC9B,WAAOA,MAAM,CAACC,WAAP,CAAmB5B,IAAI,CAACwB,QAAL,EAAnB,CAAP;AACD,GAvBe;AAwBhBK,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAc7B,IAAd,EAAoB2B,MAApB,EAA4B;AAChC,WAAOA,MAAM,CAACG,MAAP,CAAc9B,IAAI,CAACwB,QAAL,EAAd,CAAP;AACD,GA1Be;AA2BhB;AACAO,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAW/B,IAAX,EAAiB;AAClB,WAAOA,IAAI,CAACgC,OAAL,EAAP;AACD,GA9Be;AA+BhB;AACAC,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAYjC,IAAZ,EAAkB;AACpB,WAAOZ,GAAG,CAACY,IAAI,CAACgC,OAAL,EAAD,EAAiB,CAAjB,CAAV;AACD,GAlCe;AAmChB;AACAE,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAWlC,IAAX,EAAiB;AAClB,WAAOA,IAAI,CAACmC,QAAL,EAAP;AACD,GAtCe;AAuChB;AACAC,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAYpC,IAAZ,EAAkB;AACpB,WAAOZ,GAAG,CAACY,IAAI,CAACmC,QAAL,EAAD,EAAkB,CAAlB,CAAV;AACD,GA1Ce;AA2ChB;AACAxB,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAWX,IAAX,EAAiB;AAClB,QAAIO,KAAK,GAAGP,IAAI,CAACmC,QAAL,EAAZ;;AAEA,QAAI5B,KAAK,KAAK,CAAd,EAAiB;AACf,aAAO,EAAP;AACD;;AAED,QAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAOA,KAAK,GAAG,EAAf;AACD;;AAED,WAAOA,KAAP;AACD,GAxDe;AAyDhB;AACA8B,EAAAA,EAAE,EAAE,SAASA,EAAT,GAAc;AAChB,QAAI9B,KAAK,GAAGS,WAAW,CAACL,CAAZ,CAAc2B,KAAd,CAAoBtB,WAApB,EAAiCzB,SAAjC,CAAZ;AACA,WAAOH,GAAG,CAACmB,KAAD,EAAQ,CAAR,CAAV;AACD,GA7De;AA8DhB;AACAgC,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAWvC,IAAX,EAAiB;AAClB,WAAOA,IAAI,CAACwC,UAAL,EAAP;AACD,GAjEe;AAkEhB;AACAC,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAYzC,IAAZ,EAAkB;AACpB,WAAOZ,GAAG,CAACY,IAAI,CAACwC,UAAL,EAAD,EAAoB,CAApB,CAAV;AACD,GArEe;AAsEhB;AACAE,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAW1C,IAAX,EAAiB;AAClB,WAAOA,IAAI,CAAC2C,UAAL,EAAP;AACD,GAzEe;AA0EhB;AACAC,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAY5C,IAAZ,EAAkB;AACpB,WAAOZ,GAAG,CAACY,IAAI,CAAC2C,UAAL,EAAD,EAAoB,CAApB,CAAV;AACD,GA7Ee;AA8EhB;AACAE,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAW7C,IAAX,EAAiB;AAClB,WAAOJ,IAAI,CAACY,KAAL,CAAWR,IAAI,CAAC8C,eAAL,KAAyB,GAApC,CAAP;AACD,GAjFe;AAkFhB;AACAC,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAY/C,IAAZ,EAAkB;AACpB,WAAOZ,GAAG,CAACQ,IAAI,CAACY,KAAL,CAAWR,IAAI,CAAC8C,eAAL,KAAyB,EAApC,CAAD,EAA0C,CAA1C,CAAV;AACD,GArFe;AAsFhB;AACAE,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAahD,IAAb,EAAmB;AACtB,WAAOZ,GAAG,CAACY,IAAI,CAAC8C,eAAL,EAAD,EAAyB,CAAzB,CAAV;AACD,GAzFe;AA0FhB;AACAG,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAWjD,IAAX,EAAiB;AAClB,WAAOA,IAAI,CAACkD,MAAL,EAAP;AACD,GA7Fe;AA8FhB;AACAC,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAYnD,IAAZ,EAAkB2B,MAAlB,EAA0B;AAC5B,WAAOA,MAAM,CAACyB,WAAP,CAAmBpD,IAAI,CAACkD,MAAL,EAAnB,CAAP;AACD,GAjGe;AAkGhB;AACAG,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAarD,IAAb,EAAmB2B,MAAnB,EAA2B;AAC9B,WAAOA,MAAM,CAAC2B,aAAP,CAAqBtD,IAAI,CAACkD,MAAL,EAArB,CAAP;AACD,GArGe;AAsGhB;AACAK,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcvD,IAAd,EAAoB2B,MAApB,EAA4B;AAChC,WAAOA,MAAM,CAAC6B,QAAP,CAAgBxD,IAAI,CAACkD,MAAL,EAAhB,CAAP;AACD,GAzGe;AA0GhB;AACAO,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAWzD,IAAX,EAAiB2B,MAAjB,EAAyB;AAC1B,QAAI+B,YAAY,GAAG/B,MAAM,CAACjB,QAAP,IAAmBA,QAAtC;AACA,WAAOgD,YAAY,CAAC1D,IAAI,CAACmC,QAAL,EAAD,EAAkBnC,IAAI,CAACwC,UAAL,EAAlB,EAAqC,KAArC,CAAnB;AACD,GA9Ge;AA+GhB;AACAmB,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAW3D,IAAX,EAAiB2B,MAAjB,EAAyB;AAC1B,QAAI+B,YAAY,GAAG/B,MAAM,CAACjB,QAAP,IAAmBA,QAAtC;AACA,WAAOgD,YAAY,CAAC1D,IAAI,CAACmC,QAAL,EAAD,EAAkBnC,IAAI,CAACwC,UAAL,EAAlB,EAAqC,IAArC,CAAnB;AACD,GAnHe;AAoHhB;AACAoB,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAW5D,IAAX,EAAiB;AAClB,WAAOG,cAAc,CAACJ,SAAS,CAACC,IAAD,CAAV,EAAkB,GAAlB,CAArB;AACD,GAvHe;AAwHhB;AACA6D,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAY7D,IAAZ,EAAkB;AACpB,WAAOG,cAAc,CAACJ,SAAS,CAACC,IAAD,CAAV,CAArB;AACD,GA3He;AA4HhB;AACA8D,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAW9D,IAAX,EAAiB;AAClB,WAAOJ,IAAI,CAACY,KAAL,CAAWR,IAAI,CAAC+D,OAAL,KAAiB,IAA5B,CAAP;AACD,GA/He;AAgIhB;AACAC,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAWhE,IAAX,EAAiB;AAClB,WAAOA,IAAI,CAAC+D,OAAL,EAAP;AACD,GAnIe;AAoIhBE,EAAAA,CAAC,EAAE,SAASA,CAAT,CAAWjE,IAAX,EAAiB2B,MAAjB,EAAyB;AAC1B,WAAO1C,OAAO,CAACe,IAAD,EAAO;AACnBkE,MAAAA,cAAc,EAAEvC,MAAM,CAACuC,cADJ;AAEnBC,MAAAA,qBAAqB,EAAExC,MAAM,CAACwC;AAFX,KAAP,CAAd;AAID,GAzIe;AA0IhBC,EAAAA,EAAE,EAAE,SAASA,EAAT,CAAYpE,IAAZ,EAAkB2B,MAAlB,EAA0B;AAC5B,WAAOvC,GAAG,CAAC4B,WAAW,CAACiD,CAAZ,CAAcjE,IAAd,EAAoB2B,MAApB,CAAD,EAA8B,CAA9B,CAAV;AACD;AA5Ie,CAAlB;AA8IA,OAAO,SAAS0C,MAAT,CAAgBhF,GAAhB,EAAqBiF,GAArB,EAA0B;AAC/B,MAAIC,OAAO,GAAGhF,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIiF,SAAS,GAAGF,GAAG,GAAGG,MAAM,CAACH,GAAD,CAAT,GAAiB,0BAApC;AACA,MAAItE,IAAI,GAAGjB,MAAM,CAACM,GAAD,CAAjB;;AAEA,MAAI,CAACL,WAAW,CAACgB,IAAD,CAAhB,EAAwB;AACtB,WAAO,cAAP;AACD;;AAED,MAAI2B,MAAM,GAAG4C,OAAO,CAAC5C,MAAR,IAAkBzC,aAA/B;AACA,SAAOsF,SAAS,CAACE,OAAV,CAAkBvF,YAAlB,EAAgC,UAAUwF,KAAV,EAAiBC,EAAjB,EAAqB;AAC1D,QAAIA,EAAJ,EAAQ;AACN,aAAOA,EAAP;AACD;;AAED,QAAI,OAAO5D,WAAW,CAAC2D,KAAD,CAAlB,KAA8B,UAAlC,EAA8C;AAC5C,aAAO,GAAGhF,MAAH,CAAUqB,WAAW,CAAC2D,KAAD,CAAX,CAAmB3E,IAAnB,EAAyB2B,MAAzB,CAAV,CAAP;AACD;;AAED,WAAOgD,KAAP;AACD,GAVM,CAAP;AAWD","sourcesContent":["import { toDate, isValidDate, getWeek } from './util';\nimport defaultLocale from './locale/en';\nvar REGEX_FORMAT = /\\[([^\\]]+)]|YYYY|YY?|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|m{1,2}|s{1,2}|Z{1,2}|S{1,3}|w{1,2}|x|X|a|A/g;\n\nfunction pad(val) {\n  var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var output = \"\".concat(Math.abs(val));\n  var sign = val < 0 ? '-' : '';\n\n  while (output.length < len) {\n    output = \"0\".concat(output);\n  }\n\n  return sign + output;\n}\n\nfunction getOffset(date) {\n  return Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n\nfunction formatTimezone(offset) {\n  var delimeter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  return sign + pad(hours, 2) + delimeter + pad(minutes, 2);\n}\n\nvar meridiem = function meridiem(h, _, isLowercase) {\n  var word = h < 12 ? 'AM' : 'PM';\n  return isLowercase ? word.toLocaleLowerCase() : word;\n};\n\nvar formatFlags = {\n  Y: function Y(date) {\n    var y = date.getFullYear();\n    return y <= 9999 ? \"\".concat(y) : \"+\".concat(y);\n  },\n  // Year: 00, 01, ..., 99\n  YY: function YY(date) {\n    return pad(date.getFullYear(), 4).substr(2);\n  },\n  // Year: 1900, 1901, ..., 2099\n  YYYY: function YYYY(date) {\n    return pad(date.getFullYear(), 4);\n  },\n  // Month: 1, 2, ..., 12\n  M: function M(date) {\n    return date.getMonth() + 1;\n  },\n  // Month: 01, 02, ..., 12\n  MM: function MM(date) {\n    return pad(date.getMonth() + 1, 2);\n  },\n  MMM: function MMM(date, locale) {\n    return locale.monthsShort[date.getMonth()];\n  },\n  MMMM: function MMMM(date, locale) {\n    return locale.months[date.getMonth()];\n  },\n  // Day of month: 1, 2, ..., 31\n  D: function D(date) {\n    return date.getDate();\n  },\n  // Day of month: 01, 02, ..., 31\n  DD: function DD(date) {\n    return pad(date.getDate(), 2);\n  },\n  // Hour: 0, 1, ... 23\n  H: function H(date) {\n    return date.getHours();\n  },\n  // Hour: 00, 01, ..., 23\n  HH: function HH(date) {\n    return pad(date.getHours(), 2);\n  },\n  // Hour: 1, 2, ..., 12\n  h: function h(date) {\n    var hours = date.getHours();\n\n    if (hours === 0) {\n      return 12;\n    }\n\n    if (hours > 12) {\n      return hours % 12;\n    }\n\n    return hours;\n  },\n  // Hour: 01, 02, ..., 12\n  hh: function hh() {\n    var hours = formatFlags.h.apply(formatFlags, arguments);\n    return pad(hours, 2);\n  },\n  // Minute: 0, 1, ..., 59\n  m: function m(date) {\n    return date.getMinutes();\n  },\n  // Minute: 00, 01, ..., 59\n  mm: function mm(date) {\n    return pad(date.getMinutes(), 2);\n  },\n  // Second: 0, 1, ..., 59\n  s: function s(date) {\n    return date.getSeconds();\n  },\n  // Second: 00, 01, ..., 59\n  ss: function ss(date) {\n    return pad(date.getSeconds(), 2);\n  },\n  // 1/10 of second: 0, 1, ..., 9\n  S: function S(date) {\n    return Math.floor(date.getMilliseconds() / 100);\n  },\n  // 1/100 of second: 00, 01, ..., 99\n  SS: function SS(date) {\n    return pad(Math.floor(date.getMilliseconds() / 10), 2);\n  },\n  // Millisecond: 000, 001, ..., 999\n  SSS: function SSS(date) {\n    return pad(date.getMilliseconds(), 3);\n  },\n  // Day of week: 0, 1, ..., 6\n  d: function d(date) {\n    return date.getDay();\n  },\n  // Day of week: 'Su', 'Mo', ..., 'Sa'\n  dd: function dd(date, locale) {\n    return locale.weekdaysMin[date.getDay()];\n  },\n  // Day of week: 'Sun', 'Mon',..., 'Sat'\n  ddd: function ddd(date, locale) {\n    return locale.weekdaysShort[date.getDay()];\n  },\n  // Day of week: 'Sunday', 'Monday', ...,'Saturday'\n  dddd: function dddd(date, locale) {\n    return locale.weekdays[date.getDay()];\n  },\n  // AM, PM\n  A: function A(date, locale) {\n    var meridiemFunc = locale.meridiem || meridiem;\n    return meridiemFunc(date.getHours(), date.getMinutes(), false);\n  },\n  // am, pm\n  a: function a(date, locale) {\n    var meridiemFunc = locale.meridiem || meridiem;\n    return meridiemFunc(date.getHours(), date.getMinutes(), true);\n  },\n  // Timezone: -01:00, +00:00, ... +12:00\n  Z: function Z(date) {\n    return formatTimezone(getOffset(date), ':');\n  },\n  // Timezone: -0100, +0000, ... +1200\n  ZZ: function ZZ(date) {\n    return formatTimezone(getOffset(date));\n  },\n  // Seconds timestamp: 512969520\n  X: function X(date) {\n    return Math.floor(date.getTime() / 1000);\n  },\n  // Milliseconds timestamp: 512969520900\n  x: function x(date) {\n    return date.getTime();\n  },\n  w: function w(date, locale) {\n    return getWeek(date, {\n      firstDayOfWeek: locale.firstDayOfWeek,\n      firstWeekContainsDate: locale.firstWeekContainsDate\n    });\n  },\n  ww: function ww(date, locale) {\n    return pad(formatFlags.w(date, locale), 2);\n  }\n};\nexport function format(val, str) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var formatStr = str ? String(str) : 'YYYY-MM-DDTHH:mm:ss.SSSZ';\n  var date = toDate(val);\n\n  if (!isValidDate(date)) {\n    return 'Invalid Date';\n  }\n\n  var locale = options.locale || defaultLocale;\n  return formatStr.replace(REGEX_FORMAT, function (match, p1) {\n    if (p1) {\n      return p1;\n    }\n\n    if (typeof formatFlags[match] === 'function') {\n      return \"\".concat(formatFlags[match](date, locale));\n    }\n\n    return match;\n  });\n}"]},"metadata":{},"sourceType":"module"}